version: "3"

services:
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/data/postgres
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network
  
  web:
    build:
      context: .
      dockerfile: dev.dockerfile
    command: /bin/sh -c "rm -f /app/tmp/pids/server.pid && \
                         bundle install && \
                         rails assets:clobber && \
                         rails assets:precompile && \
                         rake assets:clean && \
                         rake tailwindcss:build && \
                        if [ \"${DROP_DB}\" = 'true' ]; then \
                          echo 'Dropando o banco de dados...'; \
                          bundle exec rake db:drop db:create db:migrate; \
                        else \
                          echo 'Criando e migrando o banco de dados...'; \
                          bundle exec rake db:create db:migrate; \
                        fi && \                          
                         rails db:seed && \
                         bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - BROWSER_PATH=/usr/bin/chromium
      - DROP_DB=${DROP_DB}

volumes:
  pgdata:
    driver: local
    
networks:
  app-network:
